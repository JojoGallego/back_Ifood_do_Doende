// ◮◮◮ GENERATED BY AURORA ◮◮◮
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Cliente {
  idCliente      Int         @id @default(autoincrement())
  nome           String
  cpf            String
  numCartao      String
  validadeCartao String
  nomeCartao     String
  pedidos        Pedido[]
  enderecos      Enderecos[]
}

model Entregador {
  idEntregador     Int      @id @default(autoincrement())
  nome             String
  cpf              String
  avaliacao        Float    @default(5)
  meioDeTransporte String
  pedidos          Pedido[]
}

model Enderecos {
  idEnderecos     Int              @id @default(autoincrement())
  cep             String
  estado          String
  cidade          String
  logradouro      String
  numero          String
  complemento     String
  cliente         Cliente?         @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade, onUpdate: Cascade)
  clienteId       Int?
  estabelecimento Estabelecimento?
}

model Estabelecimento {
  idEstabelecimento Int       @id @default(autoincrement())
  nome              String
  descricao         String
  pedidos           Pedido[]
  itens             Item[]
  endereco          Enderecos @relation(fields: [enderecoId], references: [idEnderecos])
  enderecoId        Int       @unique
}

model Item {
  idItem            Int             @id @default(autoincrement())
  nome              String
  preco             Float
  descricao         String
  categoria         String
  disponivel        Boolean         @default(false)
  pedido            Pedido?         @relation(fields: [pedidoId], references: [idPedido], onDelete: Cascade, onUpdate: Cascade)
  pedidoId          Int?
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [idEstabelecimento], onDelete: Cascade, onUpdate: Cascade)
  estabelecimentoId Int
}

model Pedido {
  idPedido          Int             @id @default(autoincrement())
  avaliacao         Float
  dataDeCriacao     DateTime        @default(now())
  formaDePagamento  String
  dataDeEntrega     DateTime
  cliente           Cliente         @relation(fields: [clienteId], references: [idCliente], onDelete: Cascade, onUpdate: Cascade)
  clienteId         Int
  entregador        Entregador      @relation(fields: [entregadorId], references: [idEntregador], onDelete: Cascade, onUpdate: Cascade)
  entregadorId      Int
  estabelecimento   Estabelecimento @relation(fields: [estabelecimentoId], references: [idEstabelecimento], onDelete: Cascade, onUpdate: Cascade)
  estabelecimentoId Int
  itens             Item[]
}